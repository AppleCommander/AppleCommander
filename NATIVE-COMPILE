Notes on attempts to compile AppleCommander natively... ultimately should
be directions!


Issues:
1) Need SWT code and need to compile it for all interested platforms.
2) Unable to handle graphics in native mode.  Need to patch code in
   compile process for this.
3) Need to find stable Windows compile environment/tool.


*********************
**     LINUX       **
*********************

com.webcodepro.applecommander.storage:
=====================================
These are generated in when trying to compile test and storage package.  The
JAR file must be valid (used by GCJ itself) and the classpath cannot use any
shortcuts (like "~" in Linux).  Commands:

	gcj --classpath=AppleCommander-1.1.1b.jar -c *.java
	gcj -shared -o storage.so *.o
	
Note that graphics will be an issue.  GraphicsFileFilter needed to be patched
to be (essentially) useless.  The SUN JPEGCodec is not available, nor is the
ImageIO library.  GCJ uses something less than JDK 1.4, presumably as the 
supported JDK level.

com.webcodepro.applecommander.test:
==================================
If JUnit is not available (or wanted), remove any references to JUnit.
(Make sure the assert statements have been removed also.)  The main method
should execute tests directly.  The full package must be specified, else GCJ
will not be happy with it.  Commands used to compile:

	gcj --classpath=AppleCommander-1.1.1b.jar -c DoIt.java 
	gcj --main=com.webcodepro.applecommander.test.DoIt -o DoIt DoIt.o storage.so 
	
"DoIt" was a highly modified version of DiskHelperTest.  Have not tested with
real data as of yet - may have same problems as the Windows code.


**********************
**     WINDOWS      **
**********************

Using MinGW, am able to compile AppleCommander tests.  Command sequence is 
similar to this.

1) Compile storage package:
      cd <...>\storage
      gcj --classpath=AppleCommander-1.1.1b.jar -c *.java
   Unable to build a *.so file as on Linux.
2) Compile DoIt in test:
      cd ..\test
      gcj --classpath=AppleCommander-1.1.1b.jar -c DoIt.java
      gcj --main=com.webcodepro.applecommander.test.DoIt -o DoIt DoIt.o ..\storage\*.o
      strip -x DoIt.exe
   The executable is 2.7MB and crashes when gnu.java.locale.Calendar is not
   found (must be part of MinGW).

